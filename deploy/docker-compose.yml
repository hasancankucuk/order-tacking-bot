services:
  backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: backend
    working_dir: /app/backend
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - PORT=5000
      - PYTHONPATH=/app
      - DOPPLER_TOKEN=${DOPPLER_TOKEN:-dp.st.dev.Hd0swsFQokbpRV3L1mIVLZ41f9nT3pAfFcpuVfOeoKr}
      - DOPPLER_PROJECT=order-tracking-bot
      - DOPPLER_CONFIG=dev
    ports:
      - "5000:5000" # Flask 
      - "5005:5005" #Rasa
      - "5055:5055" # Rasa Action Server
    volumes:
      - ../backend:/app/backend
    command: ["/bin/sh", "/app/backend/start.sh"]

  frontend:
    image: node:18
    container_name: frontend
    working_dir: /frontend
    volumes:
      - ../frontend:/frontend
      - /frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DOPPLER_TOKEN=${DOPPLER_TOKEN:-dp.st.dev.Hd0swsFQokbpRV3L1mIVLZ41f9nT3pAfFcpuVfOeoKr}
      - DOPPLER_PROJECT=order-tracking-bot
      - DOPPLER_CONFIG=dev
    command: >-
      sh -c "
      apt-get update && apt-get install -y curl gnupg &&
      curl -Ls https://cli.doppler.com/install.sh | sh &&
      echo 'Creating .env file with Doppler CLI...' &&
      rm -rf .env &&
      doppler secrets download --no-file --format env | grep -E '^(REACT_APP_|NODE_)' > /tmp/env_temp &&
      mv /tmp/env_temp .env &&
      echo 'Environment file created:' && ls -la .env && cat .env &&
      npm install &&
      npm start
      "